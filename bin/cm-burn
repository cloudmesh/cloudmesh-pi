#! /usr/bin/env python

"""Cloudmesh Raspberry Pi Mass Image Burner.

Usage:
  cm-burn

  cm-burn (-h | --help)
  cm-burn --version

Options:
  -h --help     Show this screen.
  --version     Show version.

Files:
  This is not fully thought through
  ~/.cloudmesh/images
  LOcation where the images will be stored for reuse

Description:

  generate SERVICES...
    generates the service stubs while using the example as template
    replaces the "example" with SERVICE where needed

  create SERVICES... --target=SERVICE
    creates all the REST SERVICE

  pack docker SERVICES... --target=SERVICE
    creates all the REST SERVICES in a docker container

  rm SERVICES...
    deletes the source of the services. This function must be
    executed with care

  run SERVICES...
    runs the service

  kill SERVICES...
    kills the service

  ps [SERVICES...]
    lists all running services

  info SERVICES..
     provides information about the services

"""

''' manual page draft

have some kind of git script similar to

curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

'''

from docopt import docopt
import os

VERSION = "0.1"

columns, lines = os.get_terminal_size()


def print_function_name(func):
    def echo_func(*func_args, **func_kwargs):
        print('')
        print(columns * '-')
        print('Executing {}'.format(func.__name__))
        print(columns * '-')
        return func(*func_args, **func_kwargs)

    return echo_func


def execute(commands):
    lines = commands.split("\n")
    for line in lines:
        os.system(line)


@print_function_name
def get(image):
    print(image)
    script = """
    ls 
    """
    execute(script)



@print_function_name
def rm(services):
    print(services)


@print_function_name
def create(names, key):
    print(names, keys)


def analyse():
    if arguments["rm"]:
        generate(arguments["IMAGE"])
    elif arguments["get"]:
        get(arguments["URL"])
    elif arguments["names"]:
        rm(arguments["NAMES"])
    elif arguments["create"]:
        create(arguments["names"], arguments["KEY"])


if __name__ == '__main__':
    arguments = docopt(__doc__, version=VERSION)
    print(arguments)

    analyse()